1. 特殊方法的存在是为了被python解释器使用，我们不需要去调用它们
ex: my_object.__len__() //error        len(my_object) //true,在执行时，python会自己去调用__len__()方法

2. 很多时候,特殊方法的调用是隐式的.
ex: for i in x:    背后其实用的是iter(x),这个函数背后其实是用的x.__iter__()方法,前提是这个方法在x中已经实现

3. 通过内置的函数来使用特殊方法是最好的选择

4. 不要想当然的随意添加特殊方法,因为方法名可能以后被python内部使用

5. 一些特殊方法:python语言手册列出了83个特殊方法的名字,其中47个用于算术运算、位运算和比较操作

6. 为什么len不是特殊方法? 
Ⅰ.len(x)中,如果x是一个内置类型实例,那么len(x)的速度会非常快,因为CPython会直接从一个C的结构体里读取对象的长度,不调用任何方法.
Ⅱ. 所以len之所以不是一个普通方法,是为了让python内置的数据结构可以走后门.
Ⅲ. 又因为len是一个特殊方法,所以我们可以将它用于自定义的数据类型. 

